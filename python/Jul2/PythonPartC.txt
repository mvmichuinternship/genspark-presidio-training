p     i     n
a   l s   i g
y a   h r
p     i 


1.
substr= ""
        max_count= 0
        curr_count= 0
        k=0
        for i in s:
            if i in substr:
                for j in range(len(substr)):
                    if i==substr[j]:
                        k=j+1
                        break
                substr= substr[k:]
                curr_count= len(substr)
            substr += i
            curr_count= len(substr)
            max_count = curr_count if curr_count> max_count else max_count
        return max_count


2.




3.



6.
class Solution:
    def groupAnagrams(self, strs: List[str]) -> List[List[str]]:
        res=[]
        dict1={}
        for s in strs:
            sortedstr=''.join(sorted(s))

            if sortedstr not in dict1:
                dict1[sortedstr]=[]

            dict1[sortedstr].append(s)
        res=list(dict1.values())
        return res

8.
class Solution:
    def canJump(self, nums: List[int]) -> bool:
        if len(nums)<=1: return 1
        i=0
        best_i=0
        bestjump= nums[0]
        while i< len(nums)-1:
            for j in range(i+1,nums[i]+i+1):
                if nums[j]+j>bestjump:
                    best_i= j
                    bestjump=nums[j]+j
                if bestjump>=len(nums)-1:
                    return 1
            if i==best_i:
                return 0
            i=best_i
